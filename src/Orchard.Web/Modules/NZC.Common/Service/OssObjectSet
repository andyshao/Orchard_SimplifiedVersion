    public static class OssObjectSet
    {       
        private static readonly string AccessKeyId;
        private static readonly string AccessKeySecret;
        private static readonly string Endpoint;
        private static readonly string BucketPrefix;
        private static readonly string FileCdnFormat;
        private static readonly OssClient Client;

        static OssObjectSet()
        {
            AccessKeyId = SysConfigHelper.GetStringByKey(SysConfigHelper.SysConfigKeyEnum.G8_AliYun_OSS_AccessKeyId);
            AccessKeySecret = SysConfigHelper.GetStringByKey(SysConfigHelper.SysConfigKeyEnum.G8_AliYun_OSS_AccessKeySecret);
            Endpoint = SysConfigHelper.GetStringByKey(SysConfigHelper.SysConfigKeyEnum.G8_AliYun_OSS_Endpoint);
            BucketPrefix = SysConfigHelper.GetStringByKey(SysConfigHelper.SysConfigKeyEnum.G8_AliYun_OSS_BucketPrefix);
            FileCdnFormat = SysConfigHelper.GetStringByKey(SysConfigHelper.SysConfigKeyEnum.G8_Url_File_Cdn_Format);
            if (!string.IsNullOrWhiteSpace(AccessKeyId) & !string.IsNullOrWhiteSpace(AccessKeySecret) &
               !string.IsNullOrWhiteSpace(BucketPrefix) & !string.IsNullOrWhiteSpace(Endpoint))
            {
                Client = new OssClient(Endpoint, AccessKeyId, AccessKeySecret);
            }
        }

        /// <summary>
        /// 将文件字节转换成streams上传到指定目录
        /// </summary>
        /// <param name="binaryData"></param>
        /// <param name="fileName"></param>
        /// <param name="msg"></param>
        /// <returns></returns>
        public static bool PutObjectFromFile(byte[] binaryData, string fileName, ref string msg)
        {
            string key = fileName;
            try
            {
                using (var stream = new MemoryStream(binaryData))
                {
                    Client.PutObject(BucketPrefix, key, stream);
                }
                return true;
            }           
            catch (Exception ex)
            {
                CommonLogHelper.Error(ex.Message, ex);
                return false;
            }
        }
        /// <summary>
        /// 将对象文件上传到指定目录
        /// </summary>
        /// <param name="bucketName"></param>
        /// <param name="localFilePath"></param>
        /// <param name="fileName"></param>
        public static bool PutObjectFromFile(Stream content, string fileName, ref string msg)
        {
            string key = fileName;
            try
            {
                Client.PutObject(BucketPrefix, key, content);
                return true;
            }
            catch (Exception ex)
            {
                CommonLogHelper.Error(ex.Message, ex);
                return false;
            }
        }
        /// <summary>
        /// 获取简单文件地址：图片、文档等
        /// </summary>
        /// <param name="filePath">数据库中存储的路径</param>
        /// <returns></returns>
        public static string GetSimpleObjectUrl(string filePath)
        {
            return string.Format(FileCdnFormat, filePath);
        }

        /// <summary>
        /// 上传图片
        /// </summary>
        /// <param name="type">图片文件位置枚举</param>
        /// <param name="MemberID"></param>
        /// <param name="stream"></param>
        /// <param name="extName"></param>
        /// <param name="msg"></param>
        /// <returns></returns>
        public static string PutImage(ImgBucketType type, long MemberID, byte[] binaryData, string extName, ref string msg)
        {
            string bucket = StringEnum.GetStringValue(type);
            if (!string.IsNullOrEmpty(bucket))
            {
                string key = $"{bucket}/";
                if (MemberID > 0)
                {
                    key += $"{MemberID.ToString()}/";
                }
                key += $"{DateTime.Now.ToString("yyyyMMdd")}/{Guid.NewGuid()}.{extName}";
                if (PutObjectFromFile(binaryData, key, ref msg))
                {
                    return key;
                }
            }
            return string.Empty;
        }
        /// <summary>
        /// 上传图片
        /// </summary>
        /// <param name="type"></param>
        /// <param name="MemberID"></param>
        /// <param name="data"></param>
        /// <param name="extName"></param>
        /// <param name="msg"></param>
        /// <returns></returns>
        public static string PutImage(ImgBucketType type, long MemberID, Stream data, string extName, ref string msg)
        {
            string bucket = StringEnum.GetStringValue(type);
            if (!string.IsNullOrEmpty(bucket))
            {
                string key = $"{bucket}/";
                if (MemberID > 0)
                {
                    key += $"{MemberID.ToString()}/";
                }
                key += $"{DateTime.Now.ToString("yyyyMMdd")}/{Guid.NewGuid()}.{extName}";
                if (PutObjectFromFile(data, key, ref msg))
                {
                    return key;
                }
            }
            return string.Empty;
        }
    }
